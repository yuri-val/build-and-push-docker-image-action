# action.yml

name: 'Build and Push Docker Image with Release'
description: 'Builds a Docker image and pushes it to Docker Hub, then creates a GitHub release and sends Telegram notifications.'
author: 'Yuri V <yuri.valigursky@gmail.com> (@yuri-val)'

inputs:
  telegram_to:
    description: 'Telegram recipient/chat ID'
    required: true
  telegram_token:
    description: 'Telegram bot token'
    required: true
  docker_hub_username:
    description: 'Docker Hub username'
    required: true
  docker_hub_access_token:
    description: 'Docker Hub access token'
    required: true
  docker_repo_name:
    description: 'Docker Hub repository name'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Extract repository name
      shell: bash
      run: echo "REPO_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2)" >> $GITHUB_ENV

    - name: Send Telegram Message on Start
      uses: appleboy/telegram-action@master
      continue-on-error: true
      with:
        to: ${{ inputs.telegram_to }}
        token: ${{ inputs.telegram_token }}
        format: html
        message: "üí¨ <b>STARTED</b>: build <pre>${{ github.repository }}</pre>"

    - name: Get Current Date
      id: date
      run: echo "date=$(date +'%y.%m.%d.%H%M')" >> $GITHUB_OUTPUT

    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Get Current Commit SHA
      id: get_sha
      run: echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.docker_hub_username }}
        password: ${{ inputs.docker_hub_access_token }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: |
          ${{ inputs.docker_hub_username }}/${{ inputs.docker_repo_name }}:${{ steps.date.outputs.date }}
          ${{ inputs.docker_hub_username }}/${{ inputs.docker_repo_name }}:latest
        build-args: |
          COMMIT_SHA=${{ steps.get_sha.outputs.sha }}
          TAG_VERSION=${{ steps.date.outputs.date }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Bump Version and Push Tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        custom_tag: ${{ steps.date.outputs.date }}

    - name: Create a GitHub Release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ steps.date.outputs.date }}
        name: Build ${{ steps.date.outputs.date }}
        body: ${{ steps.tag_version.outputs.changelog }}

    - name: Send Telegram Message on Success
      if: ${{ success() }}
      uses: appleboy/telegram-action@master
      continue-on-error: true
      with:
        to: ${{ inputs.telegram_to }}
        token: ${{ inputs.telegram_token }}
        format: html
        message: "‚úÖ <b>SUCCESSFUL</b>: built <pre>${{ github.repository }}</pre> version <pre>${{ steps.date.outputs.date }}</pre>"

    - name: Send Telegram Message on Failure
      if: ${{ failure() }}
      uses: appleboy/telegram-action@master
      continue-on-error: true
      with:
        to: ${{ inputs.telegram_to }}
        token: ${{ inputs.telegram_token }}
        format: html
        message: "‚ùå <b>FAIL</b>: build failed for <pre>${{ github.repository }}</pre>"
